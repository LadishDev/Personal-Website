---
// filepath: src/pages/homelab/index.astro
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import HomelabLayout from '../../layouts/HomelabLayout.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';

const docs = await getCollection('homelab');
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title="HomeLab" description={SITE_DESCRIPTION} />
  </head>

<HomelabLayout title="My Homelab" description="Explore my self-hosted services and infrastructure.">
  <h2>Welcome to My HomeLab Documentation</h2>
  <p>
    This is my documentation hub for my self-hosted services and infrastructure. 
    You can find detailed information about each service, including setup guides, usage instructions, and troubleshooting tips.
  </p>

  <input
    id="search"
    type="text"
    placeholder="Search homelab docs..."
    style="width:100%;padding:0.5em;margin-bottom:1.5em;font-size:1.1em;border-radius:6px;border:1px solid #30363d;background:#0d1117;color:#fff;"
    oninput="filterDocs()"
    autocomplete="off"
  />

  <section id="docs-list">
    {
      docs.map((doc) => (
        <a 
          href={`/homelab/docs/${doc.id}`} 
          class="card" 
          data-title={doc.data.title.toLowerCase()} 
          data-description={doc.data.description.toLowerCase()}
          style="display:block;text-decoration:none;color:inherit;"
        >
          <Image
            src={doc.data.heroImage ?? "https://cdn.jsdelivr.net/gh/selfhst/icons/svg/server.svg"}
            alt={doc.data.heroImageAlt ?? doc.data.title}
            width="96"
            height="96"
            style="display:block;margin:0 auto;"
          />
          <h3>{doc.data.title}</h3>
          <p>{doc.data.description}</p>
        </a>
      ))
    }
  </section>


  <script is:inline>
    function filterDocs() {
      const input = document.getElementById('search');
      const filter = input.value.toLowerCase();
      const cards = document.querySelectorAll('#docs-list .card');
      cards.forEach(card => {
        const title = card.getAttribute('data-title');
        const desc = card.getAttribute('data-description');
        if (title.includes(filter) || desc.includes(filter)) {
          card.style.display = '';
        } else {
          card.style.display = 'none';
        }
      });
    }
  </script>

  <style>
    #docs-list {
      display: grid;
      grid-template-columns: repeat(3, 1fr); /* 3 per row */
      gap: 1.5rem;
      margin-top: 2rem;
    }

    .card {
      background: #161b22;
      border: 1px solid #30363d;
      border-radius: 12px;
      padding: 1rem;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      transition: transform 0.2s ease;
      text-align: center; /* centers text under image */
    }

    .card:hover {
      transform: translateY(-4px);
    }

    .card img {
      max-width: 96px;
      border-radius: 8px;
      margin: 0 auto 1rem;
      display: block;
    }

    .card h3 {
      margin: 0 0 0.5rem 0;
    }

    /* Responsive: stack to 1 col on small screens */
    @media (max-width: 900px) {
      #docs-list {
        grid-template-columns: repeat(2, 1fr); /* 2 per row */
      }
    }

    @media (max-width: 600px) {
      #docs-list {
        grid-template-columns: 1fr; /* single column */
      }
    }
  </style>
</HomelabLayout>